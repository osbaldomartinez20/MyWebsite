{"version":3,"sources":["public/images/download.png","public/images/logo.svg","routes/App.js","routes/about.js","routes/resume.js","routes/transcript.js","helpers/serviceWorker.js","index.js"],"names":["module","exports","App","className","href","to","About","src","logo","alt","target","rel","Resume","width","height","Transcript","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","routing","id","exact","path","component","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.91e2cc57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/download.db1d3647.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport '../public/stylesheets/App.css';\n\nconst App = function() {\n  const name = \"Osbaldo Martinez Iniguez\";\n  return (\n    <div className=\"App\">\n        <h1>\n          My name is {name}, <br></br>I am a Software Engineer\n          <br></br> <br></br> <p>if you want to learn more about me click on <a href=\"/about\">about</a></p>\n        <p>\n          Or please feel free to take a look at my résumé\n        </p>\n\n        <Link to=\"/resume\" className=\"boton\">Résumé</Link>\n        </h1>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\r\nimport logo from '../public/images/download.png';\r\nimport '../public/stylesheets/App.css';\r\n\r\nfunction About() {\r\n    const name = \"Osbaldo Martinez Iniguez\";\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"logo\" alt=\"logo\" />\r\n          <p>\r\n            Hello, my name is {name}. I am a student at SFSU; I am majoring on Computer Science plus\r\n            minoring on Mathematics. I am a fast leraner and I like to challange myself by constantly\r\n            learning new things.\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://github.com/osbaldomartinez20\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            My GitHub\r\n          </a>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default About;","import React from 'react'\r\nimport '../public/stylesheets/resume.css';\r\n\r\nconst Resume = function() {\r\n    return (\r\n        <embed src=\"https://drive.google.com/file/d/1BMuJbdXz5bGwTh92B9LL-psINlf-wqdR/preview\" width=\"1200\" height=\"1000\" className=\"pdf\" />\r\n    );\r\n}\r\n\r\nexport default Resume","import React from 'react'\r\nimport '../public/stylesheets/resume.css';\r\n\r\nconst Transcript = function() {\r\n    return (\r\n        <embed src=\"https://drive.google.com/file/d/1-GYxHdpIfK36R-YNN0YPgxHuOXBLLGXH/preview\" width=\"1200\" height=\"1000\" className=\"pdf\" />\r\n    );\r\n}\r\n\r\nexport default Transcript","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Switch, Link, BrowserRouter as Router } from 'react-router-dom'\nimport './public/stylesheets/index.css';\nimport App from './routes/App';\nimport About from './routes/about';\nimport Resume from './routes/resume'\nimport Transcript from './routes/transcript';\nimport NotFound from \"./routes/notfound\"\nimport * as serviceWorker from './helpers/serviceWorker';\n\nconst routing = (\n    <Router>\n        <div>\n            <nav className=\"navbar\">\n                <ul id=\"menu\">\n                    <li>\n                        <Link to=\"/\" className=\"link\">Home </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/about\" className=\"link\">About</Link>\n                    </li>\n                    <li id=\"right\">\n                    <Link to=\"/resume\" className=\"link\">Résumé</Link>\n                    </li>\n                </ul>\n            </nav>\n            <Switch>\n                <Route exact path=\"/\" component={App} />\n                <Route path=\"MyWebsite\" component={App} />\n                <Route path=\"/about\" component={About}/>\n                <Route path=\"/resume\" component={Resume} />\n                <Route path=\"/transcript\" component={Transcript} />\n                <Route component={App} />\n            </Switch>\n        </div>\n    </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}